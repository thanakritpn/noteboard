name: CI/CD with Security Scan

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3) Backend tests
      - name: Test backend
        run: |
          cd backend
          npm ci
          npm test -- --passWithNoTests

      # 4) Frontend tests
      - name: Test frontend
        if: hashFiles('frontend/package.json') != ''
        run: |
          cd frontend
          npm ci
          if npm run | grep -q "^  test"; then
            npm test -- --passWithNoTests
          else
            echo "No frontend test script. Skipping tests."
          fi

      # 5) npm audit (SCA)
      - name: Run npm audit
        run: |
          cd backend
          npm audit --audit-level=high

      # 6) Login Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 7) Build backend image
      - name: Build backend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/note-backend:${{ github.sha }} ./backend

      # 8) Trivy scan backend image
      - name: Run Trivy on backend image
        uses: aquasecurity/trivy-action@0.13.1
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/note-backend:${{ github.sha }}
          format: 'table'
          exit-code: '1'
          severity: 'HIGH,CRITICAL'

      # 9) Push backend image
      - name: Push backend image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/note-backend:${{ github.sha }}

      # 10) Build frontend image (ถ้ามี Dockerfile)
      - name: Build frontend image
        if: hashFiles('frontend/Dockerfile') != ''
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/note-frontend:${{ github.sha }} ./frontend

      # 11) Trivy scan frontend image
      - name: Run Trivy on frontend image
        if: hashFiles('frontend/Dockerfile') != ''
        uses: aquasecurity/trivy-action@0.13.1
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/note-frontend:${{ github.sha }}
          format: 'table'
          exit-code: '1'
          severity: 'HIGH,CRITICAL'

      # 12) Push frontend image
      - name: Push frontend image
        if: hashFiles('frontend/Dockerfile') != ''
        run: docker push ${{ secrets.DOCKER_USERNAME }}/note-frontend:${{ github.sha }}

      # 13) Deploy to VM via SSH + docker compose
      - name: Deploy to VM
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            if [ ! -d "~/noteboard/.git" ]; then
              git clone https://github.com/<your-username>/mern-thinkboard.git ~/noteboard
            fi
            cd ~/noteboard
            git pull origin main
            export GITHUB_SHA=${{ github.sha }}
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d --remove-orphans

      # 14) Health check backend
      - name: Health check backend
        run: |
          for i in {1..10}; do
            if curl -fsS http://57.155.0.49:13036/api/health > /dev/null; then
              echo "Backend healthy"
              exit 0
            fi
            echo "Waiting for backend..."
            sleep 5
          done
          echo "Backend NOT healthy"
          exit 1
