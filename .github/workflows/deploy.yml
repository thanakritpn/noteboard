name: CI/CD with Security Scan

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Setup Node.js (ใช้สำหรับ npm install + audit + test)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 3. Run backend tests
      - name: Run backend tests
        run: |
          cd backend
          npm install
          npm test -- --passWithNoTests   # กัน pipeline fail ถ้ายังไม่มี test

      # 4. Run npm audit (scan dependencies)
      - name: Run npm audit
        run: |
          cd backend
          npm audit --audit-level=high

      # 5. Docker Hub login
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 6. Build backend Docker image
      - name: Build backend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/note-backend:${{ github.sha }} ./backend

      # 7. Scan backend image with Trivy
      - name: Run Trivy on backend image
        uses: aquasecurity/trivy-action@0.13.1
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/note-backend:${{ github.sha }}
          format: 'table'
          exit-code: '1'
          severity: 'HIGH,CRITICAL'

      # 8. Push backend image
      - name: Push backend image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/note-backend:${{ github.sha }}

      # 9. Build frontend Docker image
      - name: Build frontend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/note-frontend:${{ github.sha }} ./frontend

      # 10. Scan frontend image with Trivy
      - name: Run Trivy on frontend image
        uses: aquasecurity/trivy-action@0.13.1
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/note-frontend:${{ github.sha }}
          format: 'table'
          exit-code: '1'
          severity: 'HIGH,CRITICAL'

      # 11. Push frontend image
      - name: Push frontend image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/note-frontend:${{ github.sha }}

      # 12. Deploy to VM (robust version)
      - name: Deploy to VM
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            # ถ้า repo ยังไม่มี ให้ clone ก่อน
            if [ ! -d "~/noteboard/.git" ]; then
              git clone https://github.com/<your-username>/mern-thinkboard.git ~/noteboard
            fi
            cd ~/noteboard
            git pull origin main
            export GITHUB_SHA=${{ github.sha }}
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d --remove-orphans

      # 13. Health check หลัง deploy
      - name: Health check app
        run: |
          sleep 10
          curl -f http://57.155.0.49:13036 || exit 1
