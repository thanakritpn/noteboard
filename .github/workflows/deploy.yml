name: CI/CD Pipeline

on:
  push:
    branches: ["main"]

jobs:
  build-test-scan-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # ---------- Backend Tests + Coverage ----------
      - name: Install backend deps
        run: npm ci --prefix backend

      - name: Run backend tests with coverage
        run: npm run test --prefix backend -- --coverage --passWithNoTests

      # ---------- Security Scans ----------
      - name: Audit backend dependencies
        run: npm audit --prefix backend --audit-level=high --omit=dev

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build backend image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/noteboard-backend:${{ github.sha }} ./backend

      - name: Trivy scan backend image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_HUB_USERNAME }}/noteboard-backend:${{ github.sha }}
          format: 'table'
          exit-code: '1'
          severity: 'HIGH,CRITICAL'

      - name: Build frontend image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/noteboard-frontend:${{ github.sha }} ./frontend

      - name: Trivy scan frontend image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_HUB_USERNAME }}/noteboard-frontend:${{ github.sha }}
          format: 'table'
          exit-code: '1'
          severity: 'HIGH,CRITICAL'

      - name: Push images
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/noteboard-backend:${{ github.sha }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/noteboard-frontend:${{ github.sha }}

      # ---------- Deploy ----------
      - name: Deploy to Azure VM
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            if [ ! -d "~/noteboard/.git" ]; then
              git clone https://github.com/${{ github.repository }} ~/noteboard
            fi
            cd ~/noteboard
            git pull origin main
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/noteboard-backend:${{ github.sha }}
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/noteboard-frontend:${{ github.sha }}
            docker compose -f docker-compose.prod.yml up -d

      # ---------- Health Check ----------
      - name: Health check
        run: curl -f http://${{ secrets.SSH_HOST }}:3000 || exit 1

      # ---------- SonarCloud ----------
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
